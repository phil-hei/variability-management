/**
 * generated by Xtext 2.12.0
 */
package org.itea2.amalthea.variability.dependency.dependency.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import org.itea2.amalthea.variability.dependency.dependency.DependencyPackage;
import org.itea2.amalthea.variability.dependency.dependency.HierarchicalDependency;
import org.itea2.amalthea.variability.dependency.dependency.Property;
import org.itea2.amalthea.variability.dependency.dependency.StructureElement;
import org.itea2.amalthea.variability.dependency.dependency.SystemPart;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Hierarchical Dependency</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.itea2.amalthea.variability.dependency.dependency.impl.HierarchicalDependencyImpl#getSystemPart <em>System Part</em>}</li>
 *   <li>{@link org.itea2.amalthea.variability.dependency.dependency.impl.HierarchicalDependencyImpl#getStructureElements <em>Structure Elements</em>}</li>
 *   <li>{@link org.itea2.amalthea.variability.dependency.dependency.impl.HierarchicalDependencyImpl#getProperties <em>Properties</em>}</li>
 * </ul>
 *
 * @generated
 */
public class HierarchicalDependencyImpl extends MinimalEObjectImpl.Container implements HierarchicalDependency
{
  /**
   * The cached value of the '{@link #getSystemPart() <em>System Part</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSystemPart()
   * @generated
   * @ordered
   */
  protected SystemPart systemPart;

  /**
   * The cached value of the '{@link #getStructureElements() <em>Structure Elements</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getStructureElements()
   * @generated
   * @ordered
   */
  protected EList<StructureElement> structureElements;

  /**
   * The cached value of the '{@link #getProperties() <em>Properties</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getProperties()
   * @generated
   * @ordered
   */
  protected EList<Property> properties;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected HierarchicalDependencyImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return DependencyPackage.Literals.HIERARCHICAL_DEPENDENCY;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public SystemPart getSystemPart()
  {
    return systemPart;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetSystemPart(SystemPart newSystemPart, NotificationChain msgs)
  {
    SystemPart oldSystemPart = systemPart;
    systemPart = newSystemPart;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, DependencyPackage.HIERARCHICAL_DEPENDENCY__SYSTEM_PART, oldSystemPart, newSystemPart);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setSystemPart(SystemPart newSystemPart)
  {
    if (newSystemPart != systemPart)
    {
      NotificationChain msgs = null;
      if (systemPart != null)
        msgs = ((InternalEObject)systemPart).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - DependencyPackage.HIERARCHICAL_DEPENDENCY__SYSTEM_PART, null, msgs);
      if (newSystemPart != null)
        msgs = ((InternalEObject)newSystemPart).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - DependencyPackage.HIERARCHICAL_DEPENDENCY__SYSTEM_PART, null, msgs);
      msgs = basicSetSystemPart(newSystemPart, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DependencyPackage.HIERARCHICAL_DEPENDENCY__SYSTEM_PART, newSystemPart, newSystemPart));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<StructureElement> getStructureElements()
  {
    if (structureElements == null)
    {
      structureElements = new EObjectContainmentEList<StructureElement>(StructureElement.class, this, DependencyPackage.HIERARCHICAL_DEPENDENCY__STRUCTURE_ELEMENTS);
    }
    return structureElements;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<Property> getProperties()
  {
    if (properties == null)
    {
      properties = new EObjectContainmentEList<Property>(Property.class, this, DependencyPackage.HIERARCHICAL_DEPENDENCY__PROPERTIES);
    }
    return properties;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case DependencyPackage.HIERARCHICAL_DEPENDENCY__SYSTEM_PART:
        return basicSetSystemPart(null, msgs);
      case DependencyPackage.HIERARCHICAL_DEPENDENCY__STRUCTURE_ELEMENTS:
        return ((InternalEList<?>)getStructureElements()).basicRemove(otherEnd, msgs);
      case DependencyPackage.HIERARCHICAL_DEPENDENCY__PROPERTIES:
        return ((InternalEList<?>)getProperties()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case DependencyPackage.HIERARCHICAL_DEPENDENCY__SYSTEM_PART:
        return getSystemPart();
      case DependencyPackage.HIERARCHICAL_DEPENDENCY__STRUCTURE_ELEMENTS:
        return getStructureElements();
      case DependencyPackage.HIERARCHICAL_DEPENDENCY__PROPERTIES:
        return getProperties();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case DependencyPackage.HIERARCHICAL_DEPENDENCY__SYSTEM_PART:
        setSystemPart((SystemPart)newValue);
        return;
      case DependencyPackage.HIERARCHICAL_DEPENDENCY__STRUCTURE_ELEMENTS:
        getStructureElements().clear();
        getStructureElements().addAll((Collection<? extends StructureElement>)newValue);
        return;
      case DependencyPackage.HIERARCHICAL_DEPENDENCY__PROPERTIES:
        getProperties().clear();
        getProperties().addAll((Collection<? extends Property>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case DependencyPackage.HIERARCHICAL_DEPENDENCY__SYSTEM_PART:
        setSystemPart((SystemPart)null);
        return;
      case DependencyPackage.HIERARCHICAL_DEPENDENCY__STRUCTURE_ELEMENTS:
        getStructureElements().clear();
        return;
      case DependencyPackage.HIERARCHICAL_DEPENDENCY__PROPERTIES:
        getProperties().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case DependencyPackage.HIERARCHICAL_DEPENDENCY__SYSTEM_PART:
        return systemPart != null;
      case DependencyPackage.HIERARCHICAL_DEPENDENCY__STRUCTURE_ELEMENTS:
        return structureElements != null && !structureElements.isEmpty();
      case DependencyPackage.HIERARCHICAL_DEPENDENCY__PROPERTIES:
        return properties != null && !properties.isEmpty();
    }
    return super.eIsSet(featureID);
  }

} //HierarchicalDependencyImpl
