/*
 * generated by Xtext 2.12.0
 */
grammar InternalDependency;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package org.itea2.amalthea.variability.dependency.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.itea2.amalthea.variability.dependency.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.itea2.amalthea.variability.dependency.services.DependencyGrammarAccess;

}
@parser::members {
	private DependencyGrammarAccess grammarAccess;

	public void setGrammarAccess(DependencyGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleDependency
entryRuleDependency
:
{ before(grammarAccess.getDependencyRule()); }
	 ruleDependency
{ after(grammarAccess.getDependencyRule()); } 
	 EOF 
;

// Rule Dependency
ruleDependency 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDependencyAccess().getAlternatives()); }
		(rule__Dependency__Alternatives)
		{ after(grammarAccess.getDependencyAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFlatDependency
entryRuleFlatDependency
:
{ before(grammarAccess.getFlatDependencyRule()); }
	 ruleFlatDependency
{ after(grammarAccess.getFlatDependencyRule()); } 
	 EOF 
;

// Rule FlatDependency
ruleFlatDependency 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFlatDependencyAccess().getGroup()); }
		(rule__FlatDependency__Group__0)
		{ after(grammarAccess.getFlatDependencyAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleHierarchicalDependency
entryRuleHierarchicalDependency
:
{ before(grammarAccess.getHierarchicalDependencyRule()); }
	 ruleHierarchicalDependency
{ after(grammarAccess.getHierarchicalDependencyRule()); } 
	 EOF 
;

// Rule HierarchicalDependency
ruleHierarchicalDependency 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getHierarchicalDependencyAccess().getGroup()); }
		(rule__HierarchicalDependency__Group__0)
		{ after(grammarAccess.getHierarchicalDependencyAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSystemPart
entryRuleSystemPart
:
{ before(grammarAccess.getSystemPartRule()); }
	 ruleSystemPart
{ after(grammarAccess.getSystemPartRule()); } 
	 EOF 
;

// Rule SystemPart
ruleSystemPart 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSystemPartAccess().getGroup()); }
		(rule__SystemPart__Group__0)
		{ after(grammarAccess.getSystemPartAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleType
entryRuleType
:
{ before(grammarAccess.getTypeRule()); }
	 ruleType
{ after(grammarAccess.getTypeRule()); } 
	 EOF 
;

// Rule Type
ruleType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeAccess().getGroup()); }
		(rule__Type__Group__0)
		{ after(grammarAccess.getTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStructureElement
entryRuleStructureElement
:
{ before(grammarAccess.getStructureElementRule()); }
	 ruleStructureElement
{ after(grammarAccess.getStructureElementRule()); } 
	 EOF 
;

// Rule StructureElement
ruleStructureElement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStructureElementAccess().getNameAssignment()); }
		(rule__StructureElement__NameAssignment)
		{ after(grammarAccess.getStructureElementAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleProperty
entryRuleProperty
:
{ before(grammarAccess.getPropertyRule()); }
	 ruleProperty
{ after(grammarAccess.getPropertyRule()); } 
	 EOF 
;

// Rule Property
ruleProperty 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPropertyAccess().getGroup()); }
		(rule__Property__Group__0)
		{ after(grammarAccess.getPropertyAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDescription
entryRuleDescription
:
{ before(grammarAccess.getDescriptionRule()); }
	 ruleDescription
{ after(grammarAccess.getDescriptionRule()); } 
	 EOF 
;

// Rule Description
ruleDescription 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDescriptionAccess().getGroup()); }
		(rule__Description__Group__0)
		{ after(grammarAccess.getDescriptionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePropertyValue
entryRulePropertyValue
:
{ before(grammarAccess.getPropertyValueRule()); }
	 rulePropertyValue
{ after(grammarAccess.getPropertyValueRule()); } 
	 EOF 
;

// Rule PropertyValue
rulePropertyValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPropertyValueAccess().getNameAssignment()); }
		(rule__PropertyValue__NameAssignment)
		{ after(grammarAccess.getPropertyValueAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule ComparismOperator
ruleComparismOperator
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparismOperatorAccess().getAlternatives()); }
		(rule__ComparismOperator__Alternatives)
		{ after(grammarAccess.getComparismOperatorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Dependency__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDependencyAccess().getFlatDependencyAssignment_0()); }
		(rule__Dependency__FlatDependencyAssignment_0)
		{ after(grammarAccess.getDependencyAccess().getFlatDependencyAssignment_0()); }
	)
	|
	(
		(
			{ before(grammarAccess.getDependencyAccess().getHierarchicalDependenciesAssignment_1()); }
			(rule__Dependency__HierarchicalDependenciesAssignment_1)
			{ after(grammarAccess.getDependencyAccess().getHierarchicalDependenciesAssignment_1()); }
		)
		(
			{ before(grammarAccess.getDependencyAccess().getHierarchicalDependenciesAssignment_1()); }
			(rule__Dependency__HierarchicalDependenciesAssignment_1)*
			{ after(grammarAccess.getDependencyAccess().getHierarchicalDependenciesAssignment_1()); }
		)
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparismOperator__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparismOperatorAccess().getEQUALEnumLiteralDeclaration_0()); }
		('=')
		{ after(grammarAccess.getComparismOperatorAccess().getEQUALEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getComparismOperatorAccess().getGREATEREnumLiteralDeclaration_1()); }
		('>')
		{ after(grammarAccess.getComparismOperatorAccess().getGREATEREnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getComparismOperatorAccess().getLESSEnumLiteralDeclaration_2()); }
		('<')
		{ after(grammarAccess.getComparismOperatorAccess().getLESSEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getComparismOperatorAccess().getGREATEREQUALEnumLiteralDeclaration_3()); }
		('=>')
		{ after(grammarAccess.getComparismOperatorAccess().getGREATEREQUALEnumLiteralDeclaration_3()); }
	)
	|
	(
		{ before(grammarAccess.getComparismOperatorAccess().getLESSEQUALEnumLiteralDeclaration_4()); }
		('<=')
		{ after(grammarAccess.getComparismOperatorAccess().getLESSEQUALEnumLiteralDeclaration_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FlatDependency__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FlatDependency__Group__0__Impl
	rule__FlatDependency__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FlatDependency__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFlatDependencyAccess().getFlatDependencyKeyword_0()); }
	'[FlatDependency]'
	{ after(grammarAccess.getFlatDependencyAccess().getFlatDependencyKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FlatDependency__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FlatDependency__Group__1__Impl
	rule__FlatDependency__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FlatDependency__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFlatDependencyAccess().getSystemPartAssignment_1()); }
	(rule__FlatDependency__SystemPartAssignment_1)
	{ after(grammarAccess.getFlatDependencyAccess().getSystemPartAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FlatDependency__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FlatDependency__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FlatDependency__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFlatDependencyAccess().getTypeAssignment_2()); }
	(rule__FlatDependency__TypeAssignment_2)
	{ after(grammarAccess.getFlatDependencyAccess().getTypeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__HierarchicalDependency__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HierarchicalDependency__Group__0__Impl
	rule__HierarchicalDependency__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__HierarchicalDependency__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHierarchicalDependencyAccess().getHierarchicalDependencyKeyword_0()); }
	'[HierarchicalDependency]'
	{ after(grammarAccess.getHierarchicalDependencyAccess().getHierarchicalDependencyKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__HierarchicalDependency__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HierarchicalDependency__Group__1__Impl
	rule__HierarchicalDependency__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__HierarchicalDependency__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHierarchicalDependencyAccess().getExclusiveKeyword_1()); }
	('(Exclusive)')?
	{ after(grammarAccess.getHierarchicalDependencyAccess().getExclusiveKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__HierarchicalDependency__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HierarchicalDependency__Group__2__Impl
	rule__HierarchicalDependency__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__HierarchicalDependency__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHierarchicalDependencyAccess().getSystemPartAssignment_2()); }
	(rule__HierarchicalDependency__SystemPartAssignment_2)
	{ after(grammarAccess.getHierarchicalDependencyAccess().getSystemPartAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__HierarchicalDependency__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HierarchicalDependency__Group__3__Impl
	rule__HierarchicalDependency__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__HierarchicalDependency__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHierarchicalDependencyAccess().getStructureElementsKeyword_3()); }
	'StructureElements:'
	{ after(grammarAccess.getHierarchicalDependencyAccess().getStructureElementsKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__HierarchicalDependency__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HierarchicalDependency__Group__4__Impl
	rule__HierarchicalDependency__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__HierarchicalDependency__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getHierarchicalDependencyAccess().getStructureElementsAssignment_4()); }
		(rule__HierarchicalDependency__StructureElementsAssignment_4)
		{ after(grammarAccess.getHierarchicalDependencyAccess().getStructureElementsAssignment_4()); }
	)
	(
		{ before(grammarAccess.getHierarchicalDependencyAccess().getStructureElementsAssignment_4()); }
		(rule__HierarchicalDependency__StructureElementsAssignment_4)*
		{ after(grammarAccess.getHierarchicalDependencyAccess().getStructureElementsAssignment_4()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__HierarchicalDependency__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HierarchicalDependency__Group__5__Impl
	rule__HierarchicalDependency__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__HierarchicalDependency__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHierarchicalDependencyAccess().getPropertiesKeyword_5()); }
	'Properties:'
	{ after(grammarAccess.getHierarchicalDependencyAccess().getPropertiesKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__HierarchicalDependency__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HierarchicalDependency__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__HierarchicalDependency__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getHierarchicalDependencyAccess().getPropertiesAssignment_6()); }
		(rule__HierarchicalDependency__PropertiesAssignment_6)
		{ after(grammarAccess.getHierarchicalDependencyAccess().getPropertiesAssignment_6()); }
	)
	(
		{ before(grammarAccess.getHierarchicalDependencyAccess().getPropertiesAssignment_6()); }
		(rule__HierarchicalDependency__PropertiesAssignment_6)*
		{ after(grammarAccess.getHierarchicalDependencyAccess().getPropertiesAssignment_6()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SystemPart__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SystemPart__Group__0__Impl
	rule__SystemPart__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SystemPart__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSystemPartAccess().getSystemPartKeyword_0()); }
	'SystemPart:'
	{ after(grammarAccess.getSystemPartAccess().getSystemPartKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SystemPart__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SystemPart__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SystemPart__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSystemPartAccess().getNameAssignment_1()); }
	(rule__SystemPart__NameAssignment_1)
	{ after(grammarAccess.getSystemPartAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type__Group__0__Impl
	rule__Type__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAccess().getTypeKeyword_0()); }
	'Type:'
	{ after(grammarAccess.getTypeAccess().getTypeKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAccess().getTypeAssignment_1()); }
	(rule__Type__TypeAssignment_1)
	{ after(grammarAccess.getTypeAccess().getTypeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Property__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Property__Group__0__Impl
	rule__Property__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertyAccess().getLeftParenthesisKeyword_0()); }
	'('
	{ after(grammarAccess.getPropertyAccess().getLeftParenthesisKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Property__Group__1__Impl
	rule__Property__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertyAccess().getNameAssignment_1()); }
	(rule__Property__NameAssignment_1)
	{ after(grammarAccess.getPropertyAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Property__Group__2__Impl
	rule__Property__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertyAccess().getComparismOperatorAssignment_2()); }
	(rule__Property__ComparismOperatorAssignment_2)
	{ after(grammarAccess.getPropertyAccess().getComparismOperatorAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Property__Group__3__Impl
	rule__Property__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertyAccess().getValueAssignment_3()); }
	(rule__Property__ValueAssignment_3)
	{ after(grammarAccess.getPropertyAccess().getValueAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Property__Group__4__Impl
	rule__Property__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertyAccess().getDescriptionAssignment_4()); }
	(rule__Property__DescriptionAssignment_4)?
	{ after(grammarAccess.getPropertyAccess().getDescriptionAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Property__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertyAccess().getRightParenthesisKeyword_5()); }
	')'
	{ after(grammarAccess.getPropertyAccess().getRightParenthesisKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Description__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Description__Group__0__Impl
	rule__Description__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Description__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDescriptionAccess().getLeftParenthesisKeyword_0()); }
	'('
	{ after(grammarAccess.getDescriptionAccess().getLeftParenthesisKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Description__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Description__Group__1__Impl
	rule__Description__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Description__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDescriptionAccess().getNameAssignment_1()); }
	(rule__Description__NameAssignment_1)
	{ after(grammarAccess.getDescriptionAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Description__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Description__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Description__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDescriptionAccess().getRightParenthesisKeyword_2()); }
	')'
	{ after(grammarAccess.getDescriptionAccess().getRightParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Dependency__FlatDependencyAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDependencyAccess().getFlatDependencyFlatDependencyParserRuleCall_0_0()); }
		ruleFlatDependency
		{ after(grammarAccess.getDependencyAccess().getFlatDependencyFlatDependencyParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Dependency__HierarchicalDependenciesAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDependencyAccess().getHierarchicalDependenciesHierarchicalDependencyParserRuleCall_1_0()); }
		ruleHierarchicalDependency
		{ after(grammarAccess.getDependencyAccess().getHierarchicalDependenciesHierarchicalDependencyParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FlatDependency__SystemPartAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFlatDependencyAccess().getSystemPartSystemPartParserRuleCall_1_0()); }
		ruleSystemPart
		{ after(grammarAccess.getFlatDependencyAccess().getSystemPartSystemPartParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FlatDependency__TypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFlatDependencyAccess().getTypeTypeParserRuleCall_2_0()); }
		ruleType
		{ after(grammarAccess.getFlatDependencyAccess().getTypeTypeParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__HierarchicalDependency__SystemPartAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHierarchicalDependencyAccess().getSystemPartSystemPartParserRuleCall_2_0()); }
		ruleSystemPart
		{ after(grammarAccess.getHierarchicalDependencyAccess().getSystemPartSystemPartParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__HierarchicalDependency__StructureElementsAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHierarchicalDependencyAccess().getStructureElementsStructureElementParserRuleCall_4_0()); }
		ruleStructureElement
		{ after(grammarAccess.getHierarchicalDependencyAccess().getStructureElementsStructureElementParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__HierarchicalDependency__PropertiesAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHierarchicalDependencyAccess().getPropertiesPropertyParserRuleCall_6_0()); }
		ruleProperty
		{ after(grammarAccess.getHierarchicalDependencyAccess().getPropertiesPropertyParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SystemPart__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSystemPartAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getSystemPartAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__TypeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeAccess().getTypeIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getTypeAccess().getTypeIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructureElement__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStructureElementAccess().getNameIDTerminalRuleCall_0()); }
		RULE_ID
		{ after(grammarAccess.getStructureElementAccess().getNameIDTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPropertyAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getPropertyAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__ComparismOperatorAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPropertyAccess().getComparismOperatorComparismOperatorEnumRuleCall_2_0()); }
		ruleComparismOperator
		{ after(grammarAccess.getPropertyAccess().getComparismOperatorComparismOperatorEnumRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__ValueAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPropertyAccess().getValuePropertyValueParserRuleCall_3_0()); }
		rulePropertyValue
		{ after(grammarAccess.getPropertyAccess().getValuePropertyValueParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__DescriptionAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPropertyAccess().getDescriptionDescriptionParserRuleCall_4_0()); }
		ruleDescription
		{ after(grammarAccess.getPropertyAccess().getDescriptionDescriptionParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Description__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDescriptionAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getDescriptionAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyValue__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPropertyValueAccess().getNameIDTerminalRuleCall_0()); }
		RULE_ID
		{ after(grammarAccess.getPropertyValueAccess().getNameIDTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
